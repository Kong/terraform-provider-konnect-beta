// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect-beta/internal/provider/typeconvert"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/models/operations"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/models/shared"
)

func (r *AuthServerDataSourceModel) RefreshFromSharedAuthServer(ctx context.Context, resp *shared.AuthServer) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Audience = types.StringValue(resp.Audience)
		r.CreatedAt = types.StringValue(typeconvert.TimeToString(resp.CreatedAt))
		r.Description = types.StringValue(resp.Description)
		r.ID = types.StringValue(resp.ID)
		r.Issuer = types.StringValue(resp.Issuer)
		if len(resp.Labels) > 0 {
			r.Labels = make(map[string]types.String, len(resp.Labels))
			for key, value := range resp.Labels {
				r.Labels[key] = types.StringPointerValue(value)
			}
		}
		r.MetadataURI = types.StringValue(resp.MetadataURI)
		r.Name = types.StringValue(resp.Name)
		if resp.SigningAlgorithm != nil {
			r.SigningAlgorithm = types.StringValue(string(*resp.SigningAlgorithm))
		} else {
			r.SigningAlgorithm = types.StringNull()
		}
		r.UpdatedAt = types.StringValue(typeconvert.TimeToString(resp.UpdatedAt))
	}

	return diags
}

func (r *AuthServerDataSourceModel) ToOperationsGetAuthServerRequest(ctx context.Context) (*operations.GetAuthServerRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var authServerID string
	authServerID = r.ID.ValueString()

	out := operations.GetAuthServerRequest{
		AuthServerID: authServerID,
	}

	return &out, diags
}
