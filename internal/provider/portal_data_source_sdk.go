// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect-beta/internal/provider/typeconvert"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/models/operations"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/models/shared"
)

func (r *PortalDataSourceModel) RefreshFromSharedPortalResponse(ctx context.Context, resp *shared.PortalResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.AuthenticationEnabled = types.BoolValue(resp.AuthenticationEnabled)
		r.AutoApproveApplications = types.BoolValue(resp.AutoApproveApplications)
		r.AutoApproveDevelopers = types.BoolValue(resp.AutoApproveDevelopers)
		r.CanonicalDomain = types.StringValue(resp.CanonicalDomain)
		r.CreatedAt = types.StringValue(typeconvert.TimeToString(resp.CreatedAt))
		r.DefaultAPIVisibility = types.StringValue(string(resp.DefaultAPIVisibility))
		r.DefaultApplicationAuthStrategyID = types.StringPointerValue(resp.DefaultApplicationAuthStrategyID)
		r.DefaultDomain = types.StringValue(resp.DefaultDomain)
		r.DefaultPageVisibility = types.StringValue(string(resp.DefaultPageVisibility))
		r.Description = types.StringPointerValue(resp.Description)
		r.DisplayName = types.StringValue(resp.DisplayName)
		r.ID = types.StringValue(resp.ID)
		if len(resp.Labels) > 0 {
			r.Labels = make(map[string]types.String, len(resp.Labels))
			for key, value := range resp.Labels {
				r.Labels[key] = types.StringPointerValue(value)
			}
		}
		r.Name = types.StringValue(resp.Name)
		r.RbacEnabled = types.BoolValue(resp.RbacEnabled)
		r.UpdatedAt = types.StringValue(typeconvert.TimeToString(resp.UpdatedAt))
	}

	return diags
}

func (r *PortalDataSourceModel) ToOperationsGetPortalRequest(ctx context.Context) (*operations.GetPortalRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var portalID string
	portalID = r.ID.ValueString()

	out := operations.GetPortalRequest{
		PortalID: portalID,
	}

	return &out, diags
}
