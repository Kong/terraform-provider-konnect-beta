// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect-beta/internal/provider/typeconvert"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/models/operations"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/models/shared"
)

func (r *APIDocumentDataSourceModel) ToOperationsFetchAPIDocumentRequest(ctx context.Context) (*operations.FetchAPIDocumentRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var apiID string
	apiID = r.APIID.ValueString()

	var documentID string
	documentID = r.ID.ValueString()

	out := operations.FetchAPIDocumentRequest{
		APIID:      apiID,
		DocumentID: documentID,
	}

	return &out, diags
}

func (r *APIDocumentDataSourceModel) RefreshFromSharedAPIDocumentResponse(ctx context.Context, resp *shared.APIDocumentResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Content = types.StringValue(resp.Content)
		r.CreatedAt = types.StringValue(typeconvert.TimeToString(resp.CreatedAt))
		r.ID = types.StringValue(resp.ID)
		if len(resp.Labels) > 0 {
			r.Labels = make(map[string]types.String, len(resp.Labels))
			for key, value := range resp.Labels {
				r.Labels[key] = types.StringPointerValue(value)
			}
		}
		r.ParentDocumentID = types.StringPointerValue(resp.ParentDocumentID)
		r.Slug = types.StringValue(resp.Slug)
		if resp.Status != nil {
			r.Status = types.StringValue(string(*resp.Status))
		} else {
			r.Status = types.StringNull()
		}
		r.Title = types.StringValue(resp.Title)
		r.UpdatedAt = types.StringValue(typeconvert.TimeToString(resp.UpdatedAt))
	}

	return diags
}
