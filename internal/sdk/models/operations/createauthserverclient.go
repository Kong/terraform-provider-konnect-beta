// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/models/shared"
	"net/http"
)

type CreateAuthServerClientRequest struct {
	// The auth server ID
	AuthServerID string `pathParam:"style=simple,explode=false,name=authServerId"`
	// Client to be created
	CreateClient shared.CreateClient `request:"mediaType=application/json"`
}

func (c *CreateAuthServerClientRequest) GetAuthServerID() string {
	if c == nil {
		return ""
	}
	return c.AuthServerID
}

func (c *CreateAuthServerClientRequest) GetCreateClient() shared.CreateClient {
	if c == nil {
		return shared.CreateClient{}
	}
	return c.CreateClient
}

type CreateAuthServerClientResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A client with a secret
	CreatedClient *shared.CreatedClient
	// Bad Request
	BadRequestError *shared.BadRequestError
	// Not Found
	NotFoundError *shared.NotFoundError
	// Conflict
	ConflictError *shared.ConflictError
}

func (c *CreateAuthServerClientResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateAuthServerClientResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateAuthServerClientResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreateAuthServerClientResponse) GetCreatedClient() *shared.CreatedClient {
	if c == nil {
		return nil
	}
	return c.CreatedClient
}

func (c *CreateAuthServerClientResponse) GetBadRequestError() *shared.BadRequestError {
	if c == nil {
		return nil
	}
	return c.BadRequestError
}

func (c *CreateAuthServerClientResponse) GetNotFoundError() *shared.NotFoundError {
	if c == nil {
		return nil
	}
	return c.NotFoundError
}

func (c *CreateAuthServerClientResponse) GetConflictError() *shared.ConflictError {
	if c == nil {
		return nil
	}
	return c.ConflictError
}
