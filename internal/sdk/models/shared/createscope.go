// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

// CreateScope - Scope to be created
type CreateScope struct {
	// The name of the scope
	Name string `json:"name"`
	// Description of the scope
	Description *string `json:"description,omitempty"`
	// Specifies whether the scope is included by default in access tokens without being explicitly requested by the client. If the scope is not allowed by the client, it will not be included in the access token.
	Default *bool `default:"false" json:"default"`
	// Specifies whether to include the scope in the metadata document
	IncludeInMetadata *bool `default:"false" json:"include_in_metadata"`
	// Specifies whether the scope is enabled. If the scope is not enabled, it cannot be requested by clients and will not be included in the access token.
	Enabled *bool `default:"true" json:"enabled"`
}

func (c CreateScope) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateScope) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (c *CreateScope) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *CreateScope) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *CreateScope) GetDefault() *bool {
	if c == nil {
		return nil
	}
	return c.Default
}

func (c *CreateScope) GetIncludeInMetadata() *bool {
	if c == nil {
		return nil
	}
	return c.IncludeInMetadata
}

func (c *CreateScope) GetEnabled() *bool {
	if c == nil {
		return nil
	}
	return c.Enabled
}
