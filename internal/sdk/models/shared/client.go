// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
	"time"
)

// Client - A client
type Client struct {
	// The OAuth 2.0 client ID
	ID string `json:"id"`
	// The name of the client
	Name string `json:"name"`
	// List of OAuth 2.0 grant types
	GrantTypes []GrantType `json:"grant_types"`
	// The URIs that the client is allowed to redirect to after authentication in interactive flows. All redirect URIs must be absolute URIs, be secure (HTTPS), and must not include a fragment component.
	RedirectUris []string `json:"redirect_uris"`
	// The URI of the login page where the user is redirected to authenticate in interactive flows. The login page must be secure (HTTPS).
	LoginURI *string `default:"null" json:"login_uri"`
	// The duration of the minted token is valid for, in seconds
	AccessTokenDuration *int64 `default:"300" json:"access_token_duration"`
	// The duration of the minted token is valid for, in seconds
	IDTokenDuration *int64 `default:"300" json:"id_token_duration"`
	// Specifies whether the client is allowed to request all scopes
	AllowAllScopes *bool `default:"false" json:"allow_all_scopes"`
	// Specifies the scopes IDs that the client is allowed to request
	AllowScopes []string `json:"allow_scopes"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels"`
	// List of OAuth 2.0 response types
	ResponseTypes []ResponseType `json:"response_types"`
	// Requested authentication method for OAuth 2.0 endpoints.
	TokenEndpointAuthMethod *TokenEndpointAuthMethod `default:"client_secret_post" json:"token_endpoint_auth_method"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (c Client) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *Client) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"id", "name", "grant_types", "redirect_uris", "allow_scopes", "labels", "response_types", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (c *Client) GetID() string {
	if c == nil {
		return ""
	}
	return c.ID
}

func (c *Client) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *Client) GetGrantTypes() []GrantType {
	if c == nil {
		return []GrantType{}
	}
	return c.GrantTypes
}

func (c *Client) GetRedirectUris() []string {
	if c == nil {
		return []string{}
	}
	return c.RedirectUris
}

func (c *Client) GetLoginURI() *string {
	if c == nil {
		return nil
	}
	return c.LoginURI
}

func (c *Client) GetAccessTokenDuration() *int64 {
	if c == nil {
		return nil
	}
	return c.AccessTokenDuration
}

func (c *Client) GetIDTokenDuration() *int64 {
	if c == nil {
		return nil
	}
	return c.IDTokenDuration
}

func (c *Client) GetAllowAllScopes() *bool {
	if c == nil {
		return nil
	}
	return c.AllowAllScopes
}

func (c *Client) GetAllowScopes() []string {
	if c == nil {
		return []string{}
	}
	return c.AllowScopes
}

func (c *Client) GetLabels() map[string]*string {
	if c == nil {
		return map[string]*string{}
	}
	return c.Labels
}

func (c *Client) GetResponseTypes() []ResponseType {
	if c == nil {
		return []ResponseType{}
	}
	return c.ResponseTypes
}

func (c *Client) GetTokenEndpointAuthMethod() *TokenEndpointAuthMethod {
	if c == nil {
		return nil
	}
	return c.TokenEndpointAuthMethod
}

func (c *Client) GetCreatedAt() time.Time {
	if c == nil {
		return time.Time{}
	}
	return c.CreatedAt
}

func (c *Client) GetUpdatedAt() time.Time {
	if c == nil {
		return time.Time{}
	}
	return c.UpdatedAt
}
