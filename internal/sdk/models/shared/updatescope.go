// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

// UpdateScope - Scope to be updated
type UpdateScope struct {
	// The name of the scope
	Name *string `json:"name,omitempty"`
	// Description of the scope
	Description *string `json:"description,omitempty"`
	// Specifies whether the scope is a default scope
	Default *bool `default:"false" json:"default"`
	// Specifies whether to include the scope in the metadata document
	IncludeInMetadata *bool `default:"false" json:"include_in_metadata"`
	// Specifies whether the scope is enabled
	Enabled *bool `default:"true" json:"enabled"`
}

func (u UpdateScope) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateScope) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateScope) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateScope) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateScope) GetDefault() *bool {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *UpdateScope) GetIncludeInMetadata() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeInMetadata
}

func (o *UpdateScope) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}
