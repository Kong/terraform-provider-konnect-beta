// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// UpdateScope - Scope to be update
type UpdateScope struct {
	// The name of the scope
	Name *string `json:"name,omitempty"`
	// Description of the scope
	Description *string `json:"description,omitempty"`
	// Specifies whether the scope is included by default in access tokens without being explicitly requested by the client. If the scope is not allowed by the client, it will not be included in the access token.
	Default *bool `json:"default,omitempty"`
	// Specifies whether to include the scope in the metadata document
	IncludeInMetadata *bool `json:"include_in_metadata,omitempty"`
	// Specifies whether the scope is enabled. If the scope is not enabled, it cannot be requested by clients and will not be included in the access token.
	Enabled *bool `json:"enabled,omitempty"`
}

func (u *UpdateScope) GetName() *string {
	if u == nil {
		return nil
	}
	return u.Name
}

func (u *UpdateScope) GetDescription() *string {
	if u == nil {
		return nil
	}
	return u.Description
}

func (u *UpdateScope) GetDefault() *bool {
	if u == nil {
		return nil
	}
	return u.Default
}

func (u *UpdateScope) GetIncludeInMetadata() *bool {
	if u == nil {
		return nil
	}
	return u.IncludeInMetadata
}

func (u *UpdateScope) GetEnabled() *bool {
	if u == nil {
		return nil
	}
	return u.Enabled
}
