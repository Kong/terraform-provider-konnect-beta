// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

// CreateBackendClusterRequest - The request schema for creating a backend cluster.
type CreateBackendClusterRequest struct {
	// The unique name of the backend cluster.
	Name string `json:"name"`
	// A human-readable description of the virtual cluster.
	Description    *string                            `json:"description,omitempty"`
	Authentication BackendClusterAuthenticationScheme `json:"authentication"`
	// If true, virtual clusters can have allow anonymous authentication and use this backend cluster.
	// This setting is not recommended for production use as it may create privilege escalation vulnerabilities.
	//
	InsecureAllowAnonymousVirtualClusterAuth *bool `default:"false" json:"insecure_allow_anonymous_virtual_cluster_auth"`
	// A list of cluster bootstrap servers in the format address:port.
	BootstrapServers []string          `json:"bootstrap_servers"`
	TLS              BackendClusterTLS `json:"tls"`
	// The interval at which metadata is updated in seconds.
	MetadataUpdateIntervalSeconds *int64 `default:"60" json:"metadata_update_interval_seconds"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
}

func (c CreateBackendClusterRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateBackendClusterRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateBackendClusterRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateBackendClusterRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateBackendClusterRequest) GetAuthentication() BackendClusterAuthenticationScheme {
	if o == nil {
		return BackendClusterAuthenticationScheme{}
	}
	return o.Authentication
}

func (o *CreateBackendClusterRequest) GetAuthenticationAnonymous() *BackendClusterAuthenticationAnonymous {
	return o.GetAuthentication().BackendClusterAuthenticationAnonymous
}

func (o *CreateBackendClusterRequest) GetAuthenticationSaslPlain() *BackendClusterAuthenticationSaslPlain {
	return o.GetAuthentication().BackendClusterAuthenticationSaslPlain
}

func (o *CreateBackendClusterRequest) GetAuthenticationSaslScram() *BackendClusterAuthenticationSaslScram {
	return o.GetAuthentication().BackendClusterAuthenticationSaslScram
}

func (o *CreateBackendClusterRequest) GetInsecureAllowAnonymousVirtualClusterAuth() *bool {
	if o == nil {
		return nil
	}
	return o.InsecureAllowAnonymousVirtualClusterAuth
}

func (o *CreateBackendClusterRequest) GetBootstrapServers() []string {
	if o == nil {
		return []string{}
	}
	return o.BootstrapServers
}

func (o *CreateBackendClusterRequest) GetTLS() BackendClusterTLS {
	if o == nil {
		return BackendClusterTLS{}
	}
	return o.TLS
}

func (o *CreateBackendClusterRequest) GetMetadataUpdateIntervalSeconds() *int64 {
	if o == nil {
		return nil
	}
	return o.MetadataUpdateIntervalSeconds
}

func (o *CreateBackendClusterRequest) GetLabels() map[string]*string {
	if o == nil {
		return nil
	}
	return o.Labels
}
