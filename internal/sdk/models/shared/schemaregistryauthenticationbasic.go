// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

// SchemaRegistryAuthenticationBasic - Basic authentication scheme for the schema registry with username and password.
type SchemaRegistryAuthenticationBasic struct {
	type_ string `const:"basic" json:"type"`
	// A literal value or a reference to an existing secret as a template string expression.
	// The value is stored and returned by the API as-is, not treated as sensitive information.
	//
	Username string `json:"username"`
	// A sensitive value containing the secret or a reference to a secret as a template string expression.
	// If the value is provided as plain text, it is encrypted at rest and omitted from API responses.
	// If provided as an expression, the expression itself is stored and returned by the API.
	//
	Password string `json:"password"`
}

func (s SchemaRegistryAuthenticationBasic) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SchemaRegistryAuthenticationBasic) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, []string{"type", "username", "password"}); err != nil {
		return err
	}
	return nil
}

func (s *SchemaRegistryAuthenticationBasic) GetType() string {
	return "basic"
}

func (s *SchemaRegistryAuthenticationBasic) GetUsername() string {
	if s == nil {
		return ""
	}
	return s.Username
}

func (s *SchemaRegistryAuthenticationBasic) GetPassword() string {
	if s == nil {
		return ""
	}
	return s.Password
}
