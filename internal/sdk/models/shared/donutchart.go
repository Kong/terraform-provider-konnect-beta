// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DonutChartType string

const (
	DonutChartTypeDonut DonutChartType = "donut"
)

func (e DonutChartType) ToPointer() *DonutChartType {
	return &e
}
func (e *DonutChartType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "donut":
		*e = DonutChartType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DonutChartType: %v", v)
	}
}

// DonutChart - A chart that can display one-dimensional data in a hollow, segmented circle.  To use this chart, ensure that
// the query includes only one dimension (not `time`).
type DonutChart struct {
	ChartTitle *string        `json:"chart_title,omitempty"`
	Type       DonutChartType `json:"type"`
}

func (o *DonutChart) GetChartTitle() *string {
	if o == nil {
		return nil
	}
	return o.ChartTitle
}

func (o *DonutChart) GetType() DonutChartType {
	if o == nil {
		return DonutChartType("")
	}
	return o.Type
}
