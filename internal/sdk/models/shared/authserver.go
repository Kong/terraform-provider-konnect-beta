// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
	"time"
)

// AuthServer - An auth server
type AuthServer struct {
	// The ID of the auth server
	ID string `json:"id"`
	// The name of the auth server
	Name string `json:"name"`
	// The description of the auth server
	Description string `json:"description"`
	// The recipients that the tokens are intended for. This becomes the 'aud' claim in an access token
	Audience string `json:"audience"`
	// Algorithm used in the key signing process
	SigningAlgorithm *Algorithm `default:"RS256" json:"signing_algorithm"`
	// The complete URL for the custom authorization server. This becomes the 'iss' claim in an access token.
	Issuer string `json:"issuer"`
	// The URI of the metadata document for the auth server
	MetadataURI string `json:"metadata_uri"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (a AuthServer) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AuthServer) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"id", "name", "description", "audience", "issuer", "metadata_uri", "labels", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (a *AuthServer) GetID() string {
	if a == nil {
		return ""
	}
	return a.ID
}

func (a *AuthServer) GetName() string {
	if a == nil {
		return ""
	}
	return a.Name
}

func (a *AuthServer) GetDescription() string {
	if a == nil {
		return ""
	}
	return a.Description
}

func (a *AuthServer) GetAudience() string {
	if a == nil {
		return ""
	}
	return a.Audience
}

func (a *AuthServer) GetSigningAlgorithm() *Algorithm {
	if a == nil {
		return nil
	}
	return a.SigningAlgorithm
}

func (a *AuthServer) GetIssuer() string {
	if a == nil {
		return ""
	}
	return a.Issuer
}

func (a *AuthServer) GetMetadataURI() string {
	if a == nil {
		return ""
	}
	return a.MetadataURI
}

func (a *AuthServer) GetLabels() map[string]*string {
	if a == nil {
		return map[string]*string{}
	}
	return a.Labels
}

func (a *AuthServer) GetCreatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.CreatedAt
}

func (a *AuthServer) GetUpdatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.UpdatedAt
}
