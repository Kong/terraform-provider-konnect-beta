// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AllFilterItemsField string

const (
	AllFilterItemsFieldAiPlugin                  AllFilterItemsField = "ai_plugin"
	AllFilterItemsFieldAiProvider                AllFilterItemsField = "ai_provider"
	AllFilterItemsFieldAiRequestModel            AllFilterItemsField = "ai_request_model"
	AllFilterItemsFieldAiResponseModel           AllFilterItemsField = "ai_response_model"
	AllFilterItemsFieldAPI                       AllFilterItemsField = "api"
	AllFilterItemsFieldAPIProduct                AllFilterItemsField = "api_product"
	AllFilterItemsFieldAPIProductVersion         AllFilterItemsField = "api_product_version"
	AllFilterItemsFieldApplication               AllFilterItemsField = "application"
	AllFilterItemsFieldConsumer                  AllFilterItemsField = "consumer"
	AllFilterItemsFieldControlPlane              AllFilterItemsField = "control_plane"
	AllFilterItemsFieldControlPlaneGroup         AllFilterItemsField = "control_plane_group"
	AllFilterItemsFieldCountryCode               AllFilterItemsField = "country_code"
	AllFilterItemsFieldDataPlaneNode             AllFilterItemsField = "data_plane_node"
	AllFilterItemsFieldDataPlaneNodeVersion      AllFilterItemsField = "data_plane_node_version"
	AllFilterItemsFieldGatewayService            AllFilterItemsField = "gateway_service"
	AllFilterItemsFieldLlmCacheStatus            AllFilterItemsField = "llm_cache_status"
	AllFilterItemsFieldLlmEmbeddingsModel        AllFilterItemsField = "llm_embeddings_model"
	AllFilterItemsFieldLlmEmbeddingsProvider     AllFilterItemsField = "llm_embeddings_provider"
	AllFilterItemsFieldPortal                    AllFilterItemsField = "portal"
	AllFilterItemsFieldRealm                     AllFilterItemsField = "realm"
	AllFilterItemsFieldResponseSource            AllFilterItemsField = "response_source"
	AllFilterItemsFieldRoute                     AllFilterItemsField = "route"
	AllFilterItemsFieldStatusCode                AllFilterItemsField = "status_code"
	AllFilterItemsFieldStatusCodeGrouped         AllFilterItemsField = "status_code_grouped"
	AllFilterItemsFieldUpstreamStatusCode        AllFilterItemsField = "upstream_status_code"
	AllFilterItemsFieldUpstreamStatusCodeGrouped AllFilterItemsField = "upstream_status_code_grouped"
)

func (e AllFilterItemsField) ToPointer() *AllFilterItemsField {
	return &e
}
func (e *AllFilterItemsField) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ai_plugin":
		fallthrough
	case "ai_provider":
		fallthrough
	case "ai_request_model":
		fallthrough
	case "ai_response_model":
		fallthrough
	case "api":
		fallthrough
	case "api_product":
		fallthrough
	case "api_product_version":
		fallthrough
	case "application":
		fallthrough
	case "consumer":
		fallthrough
	case "control_plane":
		fallthrough
	case "control_plane_group":
		fallthrough
	case "country_code":
		fallthrough
	case "data_plane_node":
		fallthrough
	case "data_plane_node_version":
		fallthrough
	case "gateway_service":
		fallthrough
	case "llm_cache_status":
		fallthrough
	case "llm_embeddings_model":
		fallthrough
	case "llm_embeddings_provider":
		fallthrough
	case "portal":
		fallthrough
	case "realm":
		fallthrough
	case "response_source":
		fallthrough
	case "route":
		fallthrough
	case "status_code":
		fallthrough
	case "status_code_grouped":
		fallthrough
	case "upstream_status_code":
		fallthrough
	case "upstream_status_code_grouped":
		*e = AllFilterItemsField(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AllFilterItemsField: %v", v)
	}
}

type AllFilterItemsOperator string

const (
	AllFilterItemsOperatorIn       AllFilterItemsOperator = "in"
	AllFilterItemsOperatorNotIn    AllFilterItemsOperator = "not_in"
	AllFilterItemsOperatorEmpty    AllFilterItemsOperator = "empty"
	AllFilterItemsOperatorNotEmpty AllFilterItemsOperator = "not_empty"
)

func (e AllFilterItemsOperator) ToPointer() *AllFilterItemsOperator {
	return &e
}
func (e *AllFilterItemsOperator) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "in":
		fallthrough
	case "not_in":
		fallthrough
	case "empty":
		fallthrough
	case "not_empty":
		*e = AllFilterItemsOperator(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AllFilterItemsOperator: %v", v)
	}
}

type AllFilterItems struct {
	Field    AllFilterItemsField    `json:"field"`
	Operator AllFilterItemsOperator `json:"operator"`
	Value    any                    `json:"value,omitempty"`
}

func (a *AllFilterItems) GetField() AllFilterItemsField {
	if a == nil {
		return AllFilterItemsField("")
	}
	return a.Field
}

func (a *AllFilterItems) GetOperator() AllFilterItemsOperator {
	if a == nil {
		return AllFilterItemsOperator("")
	}
	return a.Operator
}

func (a *AllFilterItems) GetValue() any {
	if a == nil {
		return nil
	}
	return a.Value
}
