// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

// CreateClaim - Claim to be created
type CreateClaim struct {
	// The name of the claim
	Name string `json:"name"`
	// Specifies the value of the claim. It may contain a static value or a dynamic (templated) value. Static values which are valid JSON will result in a JSON object in the token claims.
	Value string `json:"value"`
	// Specifies whether to include claim in the token. If the value is set to 'false' for a claim, the client instead uses the access token to get claims from the '/userinfo' endpoint.
	IncludeInToken *bool `default:"false" json:"include_in_token"`
	// Specifies whether to include the claim in all scopes. If the value is set to 'false' for a claim, the claim is only included in the scopes that explicitly list it.
	IncludeInAllScopes *bool `default:"false" json:"include_in_all_scopes"`
	// Specifies the scopes IDs in which the claim is included
	IncludeInScopes []string `json:"include_in_scopes,omitempty"`
	// Specifies whether the claim is enabled. If the claim is not enabled, it will not be included in the token or the '/userinfo' endpoint.
	Enabled *bool `default:"true" json:"enabled"`
}

func (c CreateClaim) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateClaim) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateClaim) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateClaim) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *CreateClaim) GetIncludeInToken() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeInToken
}

func (o *CreateClaim) GetIncludeInAllScopes() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeInAllScopes
}

func (o *CreateClaim) GetIncludeInScopes() []string {
	if o == nil {
		return nil
	}
	return o.IncludeInScopes
}

func (o *CreateClaim) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}
