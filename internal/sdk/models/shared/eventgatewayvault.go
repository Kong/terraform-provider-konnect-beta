// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
	"time"
)

// EventGatewayVaultConfig - The configuration of the vault.
type EventGatewayVaultConfig struct {
}

// EventGatewayVault - A vault that contains secrets.
type EventGatewayVault struct {
	// The name of the vault.
	Name string `json:"name"`
	// A human-readable description of the vault.
	Description *string `default:"null" json:"description"`
	// The type of the vault.
	Type string `json:"type"`
	// The configuration of the vault.
	Config EventGatewayVaultConfig `json:"config"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
	// The unique identifier of the vault.
	ID string `json:"id"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (e EventGatewayVault) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EventGatewayVault) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EventGatewayVault) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *EventGatewayVault) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *EventGatewayVault) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *EventGatewayVault) GetConfig() EventGatewayVaultConfig {
	if o == nil {
		return EventGatewayVaultConfig{}
	}
	return o.Config
}

func (o *EventGatewayVault) GetLabels() map[string]*string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *EventGatewayVault) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *EventGatewayVault) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *EventGatewayVault) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
