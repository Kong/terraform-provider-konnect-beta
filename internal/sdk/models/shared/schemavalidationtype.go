// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SchemaValidationType - How to validate the schema and parse the record.
// * confluent_schema_registry - validates against confluent schema registry.
// * json - simple JSON parsing without the schema.
type SchemaValidationType string

const (
	SchemaValidationTypeConfluentSchemaRegistry SchemaValidationType = "confluent_schema_registry"
	SchemaValidationTypeJSON                    SchemaValidationType = "json"
)

func (e SchemaValidationType) ToPointer() *SchemaValidationType {
	return &e
}
func (e *SchemaValidationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confluent_schema_registry":
		fallthrough
	case "json":
		*e = SchemaValidationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SchemaValidationType: %v", v)
	}
}
