// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Op string

const (
	OpRemove Op = "remove"
)

func (e Op) ToPointer() *Op {
	return &e
}
func (e *Op) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "remove":
		*e = Op(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Op: %v", v)
	}
}

// EventGatewayModifyHeaderRemoveAction - An action that removes a header by key.
type EventGatewayModifyHeaderRemoveAction struct {
	Op Op `json:"op"`
	// The key of the header to remove.
	Key string `json:"key"`
}

func (o *EventGatewayModifyHeaderRemoveAction) GetOp() Op {
	if o == nil {
		return Op("")
	}
	return o.Op
}

func (o *EventGatewayModifyHeaderRemoveAction) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}
