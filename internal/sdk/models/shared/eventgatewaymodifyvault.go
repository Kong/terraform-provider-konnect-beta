// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

type EventGatewayModifyVaultType string

const (
	EventGatewayModifyVaultTypeEnv     EventGatewayModifyVaultType = "env"
	EventGatewayModifyVaultTypeKonnect EventGatewayModifyVaultType = "konnect"
)

// EventGatewayModifyVault - The typed schema of the vault to modify it.
type EventGatewayModifyVault struct {
	EventGatewayEnvVault     *EventGatewayEnvVault     `queryParam:"inline,name=EventGatewayModifyVault"`
	EventGatewayKonnectVault *EventGatewayKonnectVault `queryParam:"inline,name=EventGatewayModifyVault"`

	Type EventGatewayModifyVaultType
}

func CreateEventGatewayModifyVaultEnv(env EventGatewayEnvVault) EventGatewayModifyVault {
	typ := EventGatewayModifyVaultTypeEnv

	return EventGatewayModifyVault{
		EventGatewayEnvVault: &env,
		Type:                 typ,
	}
}

func CreateEventGatewayModifyVaultKonnect(konnect EventGatewayKonnectVault) EventGatewayModifyVault {
	typ := EventGatewayModifyVaultTypeKonnect

	return EventGatewayModifyVault{
		EventGatewayKonnectVault: &konnect,
		Type:                     typ,
	}
}

func (u *EventGatewayModifyVault) UnmarshalJSON(data []byte) error {

	type discriminator struct {
		Type string `json:"type"`
	}

	dis := new(discriminator)
	if err := json.Unmarshal(data, &dis); err != nil {
		return fmt.Errorf("could not unmarshal discriminator: %w", err)
	}

	switch dis.Type {
	case "env":
		eventGatewayEnvVault := new(EventGatewayEnvVault)
		if err := utils.UnmarshalJSON(data, &eventGatewayEnvVault, "", true, nil); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Type == env) type EventGatewayEnvVault within EventGatewayModifyVault: %w", string(data), err)
		}

		u.EventGatewayEnvVault = eventGatewayEnvVault
		u.Type = EventGatewayModifyVaultTypeEnv
		return nil
	case "konnect":
		eventGatewayKonnectVault := new(EventGatewayKonnectVault)
		if err := utils.UnmarshalJSON(data, &eventGatewayKonnectVault, "", true, nil); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Type == konnect) type EventGatewayKonnectVault within EventGatewayModifyVault: %w", string(data), err)
		}

		u.EventGatewayKonnectVault = eventGatewayKonnectVault
		u.Type = EventGatewayModifyVaultTypeKonnect
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for EventGatewayModifyVault", string(data))
}

func (u EventGatewayModifyVault) MarshalJSON() ([]byte, error) {
	if u.EventGatewayEnvVault != nil {
		return utils.MarshalJSON(u.EventGatewayEnvVault, "", true)
	}

	if u.EventGatewayKonnectVault != nil {
		return utils.MarshalJSON(u.EventGatewayKonnectVault, "", true)
	}

	return nil, errors.New("could not marshal union type EventGatewayModifyVault: all fields are null")
}
