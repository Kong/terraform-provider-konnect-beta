// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type CreateAPIRequest struct {
	// The name of your API. The `name + version` combination must be unique for each API you publish.
	//
	Name string `json:"name"`
	// A description of your API. Will be visible on your live Portal.
	Description *string `json:"description,omitempty"`
	// An optional version for your API. Leave this empty if your API is unversioned.
	Version *string `json:"version,omitempty"`
	// Marks this API as deprecated.
	Deprecated *bool `json:"deprecated,omitempty"`
	// The `slug` is used in generated URLs to provide human readable paths.
	//
	// Defaults to `slugify(name + version)`
	//
	Slug *string `json:"slug,omitempty"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
	// Public labels store information about an entity that can be used for filtering a list of objects.
	//
	// Public labels are intended to store **PUBLIC** metadata.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	PublicLabels map[string]string `json:"public_labels,omitempty"`
}

func (o *CreateAPIRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateAPIRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateAPIRequest) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *CreateAPIRequest) GetDeprecated() *bool {
	if o == nil {
		return nil
	}
	return o.Deprecated
}

func (o *CreateAPIRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *CreateAPIRequest) GetLabels() map[string]*string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *CreateAPIRequest) GetPublicLabels() map[string]string {
	if o == nil {
		return nil
	}
	return o.PublicLabels
}
