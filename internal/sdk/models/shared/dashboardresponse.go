// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
	"time"
)

type DashboardResponse struct {
	// The dashboard name, which is displayed at the top of the dashboard and in lists.
	// It does not need to be unique.
	//
	Name string `json:"name"`
	// A JSON object describing a dashboard.
	//
	// A dashboard is an array of tiles.  All tiles are of type 'chart', which query data and render a chart displaying that data.
	//
	// Dashboards have 6 columns and as many rows as necessary to display their tiles.
	//
	Definition Dashboard `json:"definition"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
	// Contains a unique identifier used for this resource.
	ID *string `json:"id,omitempty"`
	// Contains a unique identifier used for this resource.
	CreatedBy *string `json:"created_by,omitempty"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (d DashboardResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DashboardResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DashboardResponse) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *DashboardResponse) GetDefinition() Dashboard {
	if o == nil {
		return Dashboard{}
	}
	return o.Definition
}

func (o *DashboardResponse) GetLabels() map[string]*string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *DashboardResponse) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *DashboardResponse) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *DashboardResponse) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *DashboardResponse) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
