// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

// SchemaRegistryConfluent - A Confluent schema registry.
type SchemaRegistryConfluent struct {
	// The unique name of the schema registry.
	Name string `json:"name"`
	// A human-readable description of the virtual cluster.
	Description *string `json:"description,omitempty"`
	type_       string  `const:"confluent" json:"type"`
	// The configuration of [Confluent Schema Registry](https://github.com/confluentinc/schema-registry)
	//
	Config SchemaRegistryConfluentConfig `json:"config"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
}

func (s SchemaRegistryConfluent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SchemaRegistryConfluent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, []string{"name", "type", "config"}); err != nil {
		return err
	}
	return nil
}

func (s *SchemaRegistryConfluent) GetName() string {
	if s == nil {
		return ""
	}
	return s.Name
}

func (s *SchemaRegistryConfluent) GetDescription() *string {
	if s == nil {
		return nil
	}
	return s.Description
}

func (s *SchemaRegistryConfluent) GetType() string {
	return "confluent"
}

func (s *SchemaRegistryConfluent) GetConfig() SchemaRegistryConfluentConfig {
	if s == nil {
		return SchemaRegistryConfluentConfig{}
	}
	return s.Config
}

func (s *SchemaRegistryConfluent) GetLabels() map[string]*string {
	if s == nil {
		return nil
	}
	return s.Labels
}
