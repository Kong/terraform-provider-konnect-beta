// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventGatewayAWSKeySourceType string

const (
	EventGatewayAWSKeySourceTypeAws EventGatewayAWSKeySourceType = "aws"
)

func (e EventGatewayAWSKeySourceType) ToPointer() *EventGatewayAWSKeySourceType {
	return &e
}
func (e *EventGatewayAWSKeySourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws":
		*e = EventGatewayAWSKeySourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventGatewayAWSKeySourceType: %v", v)
	}
}

// EventGatewayAWSKeySource - A key source that uses an AWS KMS to find a symmetric key. Load KMS credentials from the environment.
//
// See [aws docs](https://docs.aws.amazon.com/sdk-for-rust/latest/dg/credproviders.html#credproviders-default-credentials-provider-chain)
// for more information about how credential retrieval.
type EventGatewayAWSKeySource struct {
	Type EventGatewayAWSKeySourceType `json:"type"`
}

func (o *EventGatewayAWSKeySource) GetType() EventGatewayAWSKeySourceType {
	if o == nil {
		return EventGatewayAWSKeySourceType("")
	}
	return o.Type
}
