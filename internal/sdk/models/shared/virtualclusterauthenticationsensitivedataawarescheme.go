// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

type VirtualClusterAuthenticationSensitiveDataAwareSchemeType string

const (
	VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeAnonymous   VirtualClusterAuthenticationSensitiveDataAwareSchemeType = "anonymous"
	VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeSaslPlain   VirtualClusterAuthenticationSensitiveDataAwareSchemeType = "sasl_plain"
	VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeSaslScram   VirtualClusterAuthenticationSensitiveDataAwareSchemeType = "sasl_scram"
	VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeOauthBearer VirtualClusterAuthenticationSensitiveDataAwareSchemeType = "oauth_bearer"
)

type VirtualClusterAuthenticationSensitiveDataAwareScheme struct {
	VirtualClusterAuthenticationAnonymous                   *VirtualClusterAuthenticationAnonymous                   `queryParam:"inline"`
	VirtualClusterAuthenticationSaslPlainSensitiveDataAware *VirtualClusterAuthenticationSaslPlainSensitiveDataAware `queryParam:"inline"`
	VirtualClusterAuthenticationSaslScram                   *VirtualClusterAuthenticationSaslScram                   `queryParam:"inline"`
	VirtualClusterAuthenticationOauthBearer                 *VirtualClusterAuthenticationOauthBearer                 `queryParam:"inline"`

	Type VirtualClusterAuthenticationSensitiveDataAwareSchemeType
}

func CreateVirtualClusterAuthenticationSensitiveDataAwareSchemeAnonymous(anonymous VirtualClusterAuthenticationAnonymous) VirtualClusterAuthenticationSensitiveDataAwareScheme {
	typ := VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeAnonymous

	return VirtualClusterAuthenticationSensitiveDataAwareScheme{
		VirtualClusterAuthenticationAnonymous: &anonymous,
		Type:                                  typ,
	}
}

func CreateVirtualClusterAuthenticationSensitiveDataAwareSchemeSaslPlain(saslPlain VirtualClusterAuthenticationSaslPlainSensitiveDataAware) VirtualClusterAuthenticationSensitiveDataAwareScheme {
	typ := VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeSaslPlain

	return VirtualClusterAuthenticationSensitiveDataAwareScheme{
		VirtualClusterAuthenticationSaslPlainSensitiveDataAware: &saslPlain,
		Type: typ,
	}
}

func CreateVirtualClusterAuthenticationSensitiveDataAwareSchemeSaslScram(saslScram VirtualClusterAuthenticationSaslScram) VirtualClusterAuthenticationSensitiveDataAwareScheme {
	typ := VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeSaslScram

	return VirtualClusterAuthenticationSensitiveDataAwareScheme{
		VirtualClusterAuthenticationSaslScram: &saslScram,
		Type:                                  typ,
	}
}

func CreateVirtualClusterAuthenticationSensitiveDataAwareSchemeOauthBearer(oauthBearer VirtualClusterAuthenticationOauthBearer) VirtualClusterAuthenticationSensitiveDataAwareScheme {
	typ := VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeOauthBearer

	return VirtualClusterAuthenticationSensitiveDataAwareScheme{
		VirtualClusterAuthenticationOauthBearer: &oauthBearer,
		Type:                                    typ,
	}
}

func (u *VirtualClusterAuthenticationSensitiveDataAwareScheme) UnmarshalJSON(data []byte) error {

	type discriminator struct {
		Type string `json:"type"`
	}

	dis := new(discriminator)
	if err := json.Unmarshal(data, &dis); err != nil {
		return fmt.Errorf("could not unmarshal discriminator: %w", err)
	}

	switch dis.Type {
	case "anonymous":
		virtualClusterAuthenticationAnonymous := new(VirtualClusterAuthenticationAnonymous)
		if err := utils.UnmarshalJSON(data, &virtualClusterAuthenticationAnonymous, "", true, false); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Type == anonymous) type VirtualClusterAuthenticationAnonymous within VirtualClusterAuthenticationSensitiveDataAwareScheme: %w", string(data), err)
		}

		u.VirtualClusterAuthenticationAnonymous = virtualClusterAuthenticationAnonymous
		u.Type = VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeAnonymous
		return nil
	case "sasl_plain":
		virtualClusterAuthenticationSaslPlainSensitiveDataAware := new(VirtualClusterAuthenticationSaslPlainSensitiveDataAware)
		if err := utils.UnmarshalJSON(data, &virtualClusterAuthenticationSaslPlainSensitiveDataAware, "", true, false); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Type == sasl_plain) type VirtualClusterAuthenticationSaslPlainSensitiveDataAware within VirtualClusterAuthenticationSensitiveDataAwareScheme: %w", string(data), err)
		}

		u.VirtualClusterAuthenticationSaslPlainSensitiveDataAware = virtualClusterAuthenticationSaslPlainSensitiveDataAware
		u.Type = VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeSaslPlain
		return nil
	case "sasl_scram":
		virtualClusterAuthenticationSaslScram := new(VirtualClusterAuthenticationSaslScram)
		if err := utils.UnmarshalJSON(data, &virtualClusterAuthenticationSaslScram, "", true, false); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Type == sasl_scram) type VirtualClusterAuthenticationSaslScram within VirtualClusterAuthenticationSensitiveDataAwareScheme: %w", string(data), err)
		}

		u.VirtualClusterAuthenticationSaslScram = virtualClusterAuthenticationSaslScram
		u.Type = VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeSaslScram
		return nil
	case "oauth_bearer":
		virtualClusterAuthenticationOauthBearer := new(VirtualClusterAuthenticationOauthBearer)
		if err := utils.UnmarshalJSON(data, &virtualClusterAuthenticationOauthBearer, "", true, false); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Type == oauth_bearer) type VirtualClusterAuthenticationOauthBearer within VirtualClusterAuthenticationSensitiveDataAwareScheme: %w", string(data), err)
		}

		u.VirtualClusterAuthenticationOauthBearer = virtualClusterAuthenticationOauthBearer
		u.Type = VirtualClusterAuthenticationSensitiveDataAwareSchemeTypeOauthBearer
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for VirtualClusterAuthenticationSensitiveDataAwareScheme", string(data))
}

func (u VirtualClusterAuthenticationSensitiveDataAwareScheme) MarshalJSON() ([]byte, error) {
	if u.VirtualClusterAuthenticationAnonymous != nil {
		return utils.MarshalJSON(u.VirtualClusterAuthenticationAnonymous, "", true)
	}

	if u.VirtualClusterAuthenticationSaslPlainSensitiveDataAware != nil {
		return utils.MarshalJSON(u.VirtualClusterAuthenticationSaslPlainSensitiveDataAware, "", true)
	}

	if u.VirtualClusterAuthenticationSaslScram != nil {
		return utils.MarshalJSON(u.VirtualClusterAuthenticationSaslScram, "", true)
	}

	if u.VirtualClusterAuthenticationOauthBearer != nil {
		return utils.MarshalJSON(u.VirtualClusterAuthenticationOauthBearer, "", true)
	}

	return nil, errors.New("could not marshal union type VirtualClusterAuthenticationSensitiveDataAwareScheme: all fields are null")
}
