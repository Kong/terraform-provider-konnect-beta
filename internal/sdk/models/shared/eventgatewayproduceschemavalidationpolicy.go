// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

// EventGatewayProduceSchemaValidationPolicy - A policy that validates produce messages against a schema registry.
type EventGatewayProduceSchemaValidationPolicy struct {
	type_ string `const:"schema_validation" json:"type"`
	// A unique user-defined name of the policy.
	Name *string `default:"null" json:"name"`
	// A human-readable description of the policy.
	Description *string `json:"description,omitempty"`
	// Whether the policy is enabled.
	Enabled *bool `default:"true" json:"enabled"`
	// A string containing the boolean expression that determines whether the policy is applied.
	Condition *string `json:"condition,omitempty"`
	// The configuration of the produce schema validation policy.
	Config EventGatewayProduceSchemaValidationPolicyConfig `json:"config"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
}

func (e EventGatewayProduceSchemaValidationPolicy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EventGatewayProduceSchemaValidationPolicy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"type", "config"}); err != nil {
		return err
	}
	return nil
}

func (e *EventGatewayProduceSchemaValidationPolicy) GetType() string {
	return "schema_validation"
}

func (e *EventGatewayProduceSchemaValidationPolicy) GetName() *string {
	if e == nil {
		return nil
	}
	return e.Name
}

func (e *EventGatewayProduceSchemaValidationPolicy) GetDescription() *string {
	if e == nil {
		return nil
	}
	return e.Description
}

func (e *EventGatewayProduceSchemaValidationPolicy) GetEnabled() *bool {
	if e == nil {
		return nil
	}
	return e.Enabled
}

func (e *EventGatewayProduceSchemaValidationPolicy) GetCondition() *string {
	if e == nil {
		return nil
	}
	return e.Condition
}

func (e *EventGatewayProduceSchemaValidationPolicy) GetConfig() EventGatewayProduceSchemaValidationPolicyConfig {
	if e == nil {
		return EventGatewayProduceSchemaValidationPolicyConfig{}
	}
	return e.Config
}

func (e *EventGatewayProduceSchemaValidationPolicy) GetConfigConfluentSchemaRegistry() *EventGatewayProduceSchemaValidationPolicySchemaRegistryConfig {
	return e.GetConfig().EventGatewayProduceSchemaValidationPolicySchemaRegistryConfig
}

func (e *EventGatewayProduceSchemaValidationPolicy) GetConfigJSON() *EventGatewayProduceSchemaValidationPolicyJSONConfig {
	return e.GetConfig().EventGatewayProduceSchemaValidationPolicyJSONConfig
}

func (e *EventGatewayProduceSchemaValidationPolicy) GetLabels() map[string]*string {
	if e == nil {
		return nil
	}
	return e.Labels
}
