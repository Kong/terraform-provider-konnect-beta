// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
	"time"
)

// EventGatewayListener - Listeners are used to expose virtual clusters to clients.
type EventGatewayListener struct {
	// The unique identifier of the listener.
	ID string `json:"id"`
	// The unique name of the listener.
	Name string `json:"name"`
	// A human-readable description of the listener.
	Description *string `default:"null" json:"description"`
	// Which address or addresses to listen on.
	// `0.0.0.0` means all addresses on the host.
	// `::` means all addresses on the host in IPv6.
	//
	//   If `0.0.0.0` or `::` is used, there can't be other extra addresses defined.
	//   WARNING: there are use cases where listening on all addresses is insecure. So use this with caution.
	//
	//   `localhost` means only the localhost ipv4 address.
	//
	Addresses []string `json:"addresses"`
	// Which port or ports to listen on.
	// There can be multiple ways to define ports:
	//   - as a single port, e.g. 9092
	//   - as a range of ports, e.g. 9092-9094
	//
	// It's possible to combine both, e.g. [9092, "9093-9095", 9096].
	//
	Ports []string `json:"ports"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (e EventGatewayListener) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EventGatewayListener) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EventGatewayListener) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *EventGatewayListener) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *EventGatewayListener) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *EventGatewayListener) GetAddresses() []string {
	if o == nil {
		return []string{}
	}
	return o.Addresses
}

func (o *EventGatewayListener) GetPorts() []string {
	if o == nil {
		return []string{}
	}
	return o.Ports
}

func (o *EventGatewayListener) GetLabels() map[string]*string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *EventGatewayListener) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *EventGatewayListener) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
