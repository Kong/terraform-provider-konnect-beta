// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

type ControlPlaneError string

const (
	ControlPlaneErrorControlPlaneErrorNoResponse             ControlPlaneError = "control_plane_error_no_response"
	ControlPlaneErrorControlPlaneErrorInvalidResponse        ControlPlaneError = "control_plane_error_invalid_response"
	ControlPlaneErrorControlPlaneErrorUnavailable            ControlPlaneError = "control_plane_error_unavailable"
	ControlPlaneErrorControlPlaneErrorInternalError          ControlPlaneError = "control_plane_error_internal_error"
	ControlPlaneErrorControlPlaneErrorBadRequest             ControlPlaneError = "control_plane_error_bad_request"
	ControlPlaneErrorControlPlaneErrorPluginConflict         ControlPlaneError = "control_plane_error_plugin_conflict"
	ControlPlaneErrorControlPlaneErrorDataConstraintError    ControlPlaneError = "control_plane_error_data_constraint_error"
	ControlPlaneErrorControlPlaneErrorImplementationNotFound ControlPlaneError = "control_plane_error_implementation_not_found"
)

func (e ControlPlaneError) ToPointer() *ControlPlaneError {
	return &e
}
func (e *ControlPlaneError) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "control_plane_error_no_response":
		fallthrough
	case "control_plane_error_invalid_response":
		fallthrough
	case "control_plane_error_unavailable":
		fallthrough
	case "control_plane_error_internal_error":
		fallthrough
	case "control_plane_error_bad_request":
		fallthrough
	case "control_plane_error_plugin_conflict":
		fallthrough
	case "control_plane_error_data_constraint_error":
		fallthrough
	case "control_plane_error_implementation_not_found":
		*e = ControlPlaneError(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ControlPlaneError: %v", v)
	}
}

type Details struct {
	Type                 *string  `json:"type,omitempty"`
	Message              []string `json:"message,omitempty"`
	AdditionalProperties any      `additionalProperties:"true" json:"-"`
}

func (d Details) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *Details) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Details) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *Details) GetMessage() []string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *Details) GetAdditionalProperties() any {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

type Info struct {
	Details              []Details `json:"details,omitempty"`
	AdditionalProperties any       `additionalProperties:"true" json:"-"`
}

func (i Info) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *Info) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Info) GetDetails() []Details {
	if o == nil {
		return nil
	}
	return o.Details
}

func (o *Info) GetAdditionalProperties() any {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

type AuthStrategySyncError struct {
	ControlPlaneError *ControlPlaneError `json:"control_plane_error,omitempty"`
	Message           string             `json:"message"`
	Info              *Info              `json:"info,omitempty"`
}

func (o *AuthStrategySyncError) GetControlPlaneError() *ControlPlaneError {
	if o == nil {
		return nil
	}
	return o.ControlPlaneError
}

func (o *AuthStrategySyncError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *AuthStrategySyncError) GetInfo() *Info {
	if o == nil {
		return nil
	}
	return o.Info
}

// APIImplementationService - A Gateway service that implements an API
type APIImplementationService struct {
	ControlPlaneID        string                 `json:"control_plane_id"`
	ID                    string                 `json:"id"`
	AuthStrategySyncError *AuthStrategySyncError `json:"auth_strategy_sync_error,omitempty"`
}

func (o *APIImplementationService) GetControlPlaneID() string {
	if o == nil {
		return ""
	}
	return o.ControlPlaneID
}

func (o *APIImplementationService) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *APIImplementationService) GetAuthStrategySyncError() *AuthStrategySyncError {
	if o == nil {
		return nil
	}
	return o.AuthStrategySyncError
}
