// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

type EventGatewayListenerPortType string

const (
	EventGatewayListenerPortTypeStr     EventGatewayListenerPortType = "str"
	EventGatewayListenerPortTypeInteger EventGatewayListenerPortType = "integer"
)

type EventGatewayListenerPort struct {
	Str     *string `queryParam:"inline"`
	Integer *int64  `queryParam:"inline"`

	Type EventGatewayListenerPortType
}

func CreateEventGatewayListenerPortStr(str string) EventGatewayListenerPort {
	typ := EventGatewayListenerPortTypeStr

	return EventGatewayListenerPort{
		Str:  &str,
		Type: typ,
	}
}

func CreateEventGatewayListenerPortInteger(integer int64) EventGatewayListenerPort {
	typ := EventGatewayListenerPortTypeInteger

	return EventGatewayListenerPort{
		Integer: &integer,
		Type:    typ,
	}
}

func (u *EventGatewayListenerPort) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = EventGatewayListenerPortTypeStr
		return nil
	}

	var integer int64 = int64(0)
	if err := utils.UnmarshalJSON(data, &integer, "", true, true); err == nil {
		u.Integer = &integer
		u.Type = EventGatewayListenerPortTypeInteger
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for EventGatewayListenerPort", string(data))
}

func (u EventGatewayListenerPort) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.Integer != nil {
		return utils.MarshalJSON(u.Integer, "", true)
	}

	return nil, errors.New("could not marshal union type EventGatewayListenerPort: all fields are null")
}
