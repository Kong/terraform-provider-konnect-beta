// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ResourceType - This rule applies to access only for type of resource
type ResourceType string

const (
	ResourceTypeTopic           ResourceType = "topic"
	ResourceTypeGroup           ResourceType = "group"
	ResourceTypeTransactionalID ResourceType = "transactional_id"
)

func (e ResourceType) ToPointer() *ResourceType {
	return &e
}
func (e *ResourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "topic":
		fallthrough
	case "group":
		fallthrough
	case "transactional_id":
		*e = ResourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceType: %v", v)
	}
}

// Action - How to handle the request if the rule matches
type Action string

const (
	ActionAllow Action = "allow"
	ActionDeny  Action = "deny"
)

func (e Action) ToPointer() *Action {
	return &e
}
func (e *Action) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "deny":
		*e = Action(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Action: %v", v)
	}
}

// EventGatewayACLRule - A Kafka ACL rule to apply to virtual cluster traffic
type EventGatewayACLRule struct {
	// This rule applies to access only for type of resource
	ResourceType ResourceType `json:"resource_type"`
	// How to handle the request if the rule matches
	Action Action `json:"action"`
	// Types of Kafka operations to match against. Note that not every operation can apply to every resource type.
	Operations []EventGatewayACLOperation `json:"operations"`
	// If any of these entries match, the resource name matches for this rule.
	ResourceNames []EventGatewayACLResourceName `json:"resource_names"`
}

func (e *EventGatewayACLRule) GetResourceType() ResourceType {
	if e == nil {
		return ResourceType("")
	}
	return e.ResourceType
}

func (e *EventGatewayACLRule) GetAction() Action {
	if e == nil {
		return Action("")
	}
	return e.Action
}

func (e *EventGatewayACLRule) GetOperations() []EventGatewayACLOperation {
	if e == nil {
		return []EventGatewayACLOperation{}
	}
	return e.Operations
}

func (e *EventGatewayACLRule) GetResourceNames() []EventGatewayACLResourceName {
	if e == nil {
		return []EventGatewayACLResourceName{}
	}
	return e.ResourceNames
}
