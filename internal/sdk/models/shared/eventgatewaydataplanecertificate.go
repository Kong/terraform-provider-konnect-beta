// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
	"time"
)

// EventGatewayDataPlaneCertificate - A dataplane certficate.
type EventGatewayDataPlaneCertificate struct {
	// The unique identifier of the certificate.
	ID string `json:"id"`
	// JSON escaped string of the certificate.
	Certificate string `json:"certificate"`
	// The name to identify of the certificate.
	Name *string `default:"null" json:"name"`
	// A description of the certificate.
	Description *string `default:"null" json:"description"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
	// Metadata extracted from a certificate.
	Metadata *CertificateMetadata `json:"metadata,omitempty"`
}

func (e EventGatewayDataPlaneCertificate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EventGatewayDataPlaneCertificate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EventGatewayDataPlaneCertificate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *EventGatewayDataPlaneCertificate) GetCertificate() string {
	if o == nil {
		return ""
	}
	return o.Certificate
}

func (o *EventGatewayDataPlaneCertificate) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *EventGatewayDataPlaneCertificate) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *EventGatewayDataPlaneCertificate) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *EventGatewayDataPlaneCertificate) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *EventGatewayDataPlaneCertificate) GetMetadata() *CertificateMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}
