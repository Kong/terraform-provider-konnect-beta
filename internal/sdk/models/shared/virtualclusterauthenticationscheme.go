// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

type VirtualClusterAuthenticationSchemeType string

const (
	VirtualClusterAuthenticationSchemeTypeAnonymous   VirtualClusterAuthenticationSchemeType = "anonymous"
	VirtualClusterAuthenticationSchemeTypeSaslPlain   VirtualClusterAuthenticationSchemeType = "sasl_plain"
	VirtualClusterAuthenticationSchemeTypeSaslScram   VirtualClusterAuthenticationSchemeType = "sasl_scram"
	VirtualClusterAuthenticationSchemeTypeOauthBearer VirtualClusterAuthenticationSchemeType = "oauth_bearer"
)

type VirtualClusterAuthenticationScheme struct {
	VirtualClusterAuthenticationAnonymous   *VirtualClusterAuthenticationAnonymous   `queryParam:"inline,name=VirtualClusterAuthenticationScheme"`
	VirtualClusterAuthenticationSaslPlain   *VirtualClusterAuthenticationSaslPlain   `queryParam:"inline,name=VirtualClusterAuthenticationScheme"`
	VirtualClusterAuthenticationSaslScram   *VirtualClusterAuthenticationSaslScram   `queryParam:"inline,name=VirtualClusterAuthenticationScheme"`
	VirtualClusterAuthenticationOauthBearer *VirtualClusterAuthenticationOauthBearer `queryParam:"inline,name=VirtualClusterAuthenticationScheme"`

	Type VirtualClusterAuthenticationSchemeType
}

func CreateVirtualClusterAuthenticationSchemeAnonymous(anonymous VirtualClusterAuthenticationAnonymous) VirtualClusterAuthenticationScheme {
	typ := VirtualClusterAuthenticationSchemeTypeAnonymous

	return VirtualClusterAuthenticationScheme{
		VirtualClusterAuthenticationAnonymous: &anonymous,
		Type:                                  typ,
	}
}

func CreateVirtualClusterAuthenticationSchemeSaslPlain(saslPlain VirtualClusterAuthenticationSaslPlain) VirtualClusterAuthenticationScheme {
	typ := VirtualClusterAuthenticationSchemeTypeSaslPlain

	return VirtualClusterAuthenticationScheme{
		VirtualClusterAuthenticationSaslPlain: &saslPlain,
		Type:                                  typ,
	}
}

func CreateVirtualClusterAuthenticationSchemeSaslScram(saslScram VirtualClusterAuthenticationSaslScram) VirtualClusterAuthenticationScheme {
	typ := VirtualClusterAuthenticationSchemeTypeSaslScram

	return VirtualClusterAuthenticationScheme{
		VirtualClusterAuthenticationSaslScram: &saslScram,
		Type:                                  typ,
	}
}

func CreateVirtualClusterAuthenticationSchemeOauthBearer(oauthBearer VirtualClusterAuthenticationOauthBearer) VirtualClusterAuthenticationScheme {
	typ := VirtualClusterAuthenticationSchemeTypeOauthBearer

	return VirtualClusterAuthenticationScheme{
		VirtualClusterAuthenticationOauthBearer: &oauthBearer,
		Type:                                    typ,
	}
}

func (u *VirtualClusterAuthenticationScheme) UnmarshalJSON(data []byte) error {

	type discriminator struct {
		Type string `json:"type"`
	}

	dis := new(discriminator)
	if err := json.Unmarshal(data, &dis); err != nil {
		return fmt.Errorf("could not unmarshal discriminator: %w", err)
	}

	switch dis.Type {
	case "anonymous":
		virtualClusterAuthenticationAnonymous := new(VirtualClusterAuthenticationAnonymous)
		if err := utils.UnmarshalJSON(data, &virtualClusterAuthenticationAnonymous, "", true, nil); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Type == anonymous) type VirtualClusterAuthenticationAnonymous within VirtualClusterAuthenticationScheme: %w", string(data), err)
		}

		u.VirtualClusterAuthenticationAnonymous = virtualClusterAuthenticationAnonymous
		u.Type = VirtualClusterAuthenticationSchemeTypeAnonymous
		return nil
	case "sasl_plain":
		virtualClusterAuthenticationSaslPlain := new(VirtualClusterAuthenticationSaslPlain)
		if err := utils.UnmarshalJSON(data, &virtualClusterAuthenticationSaslPlain, "", true, nil); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Type == sasl_plain) type VirtualClusterAuthenticationSaslPlain within VirtualClusterAuthenticationScheme: %w", string(data), err)
		}

		u.VirtualClusterAuthenticationSaslPlain = virtualClusterAuthenticationSaslPlain
		u.Type = VirtualClusterAuthenticationSchemeTypeSaslPlain
		return nil
	case "sasl_scram":
		virtualClusterAuthenticationSaslScram := new(VirtualClusterAuthenticationSaslScram)
		if err := utils.UnmarshalJSON(data, &virtualClusterAuthenticationSaslScram, "", true, nil); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Type == sasl_scram) type VirtualClusterAuthenticationSaslScram within VirtualClusterAuthenticationScheme: %w", string(data), err)
		}

		u.VirtualClusterAuthenticationSaslScram = virtualClusterAuthenticationSaslScram
		u.Type = VirtualClusterAuthenticationSchemeTypeSaslScram
		return nil
	case "oauth_bearer":
		virtualClusterAuthenticationOauthBearer := new(VirtualClusterAuthenticationOauthBearer)
		if err := utils.UnmarshalJSON(data, &virtualClusterAuthenticationOauthBearer, "", true, nil); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Type == oauth_bearer) type VirtualClusterAuthenticationOauthBearer within VirtualClusterAuthenticationScheme: %w", string(data), err)
		}

		u.VirtualClusterAuthenticationOauthBearer = virtualClusterAuthenticationOauthBearer
		u.Type = VirtualClusterAuthenticationSchemeTypeOauthBearer
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for VirtualClusterAuthenticationScheme", string(data))
}

func (u VirtualClusterAuthenticationScheme) MarshalJSON() ([]byte, error) {
	if u.VirtualClusterAuthenticationAnonymous != nil {
		return utils.MarshalJSON(u.VirtualClusterAuthenticationAnonymous, "", true)
	}

	if u.VirtualClusterAuthenticationSaslPlain != nil {
		return utils.MarshalJSON(u.VirtualClusterAuthenticationSaslPlain, "", true)
	}

	if u.VirtualClusterAuthenticationSaslScram != nil {
		return utils.MarshalJSON(u.VirtualClusterAuthenticationSaslScram, "", true)
	}

	if u.VirtualClusterAuthenticationOauthBearer != nil {
		return utils.MarshalJSON(u.VirtualClusterAuthenticationOauthBearer, "", true)
	}

	return nil, errors.New("could not marshal union type VirtualClusterAuthenticationScheme: all fields are null")
}
