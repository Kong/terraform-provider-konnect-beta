// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

type EventGatewayIDPrefixPolicyType string

const (
	EventGatewayIDPrefixPolicyTypeIDPrefix EventGatewayIDPrefixPolicyType = "id_prefix"
)

func (e EventGatewayIDPrefixPolicyType) ToPointer() *EventGatewayIDPrefixPolicyType {
	return &e
}
func (e *EventGatewayIDPrefixPolicyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id_prefix":
		*e = EventGatewayIDPrefixPolicyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventGatewayIDPrefixPolicyType: %v", v)
	}
}

// EventGatewayIDPrefixPolicyConfig - An empty configuration object.
type EventGatewayIDPrefixPolicyConfig struct {
}

// EventGatewayIDPrefixPolicy - A policy that rewriting transaction and consumer group ids by adding the virtual cluster prefix.
type EventGatewayIDPrefixPolicy struct {
	Type EventGatewayIDPrefixPolicyType `json:"type"`
	// A unique user-defined name of the policy.
	Name *string `default:"null" json:"name"`
	// A human-readable description of the policy.
	Description *string `default:"null" json:"description"`
	// Whether the policy is enabled.
	Enabled *bool `default:"true" json:"enabled"`
	// A string containing the boolean expression that determines whether the policy is applied.
	Condition *string `json:"condition,omitempty"`
	// An empty configuration object.
	Config *EventGatewayIDPrefixPolicyConfig `json:"config"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
}

func (e EventGatewayIDPrefixPolicy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EventGatewayIDPrefixPolicy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EventGatewayIDPrefixPolicy) GetType() EventGatewayIDPrefixPolicyType {
	if o == nil {
		return EventGatewayIDPrefixPolicyType("")
	}
	return o.Type
}

func (o *EventGatewayIDPrefixPolicy) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *EventGatewayIDPrefixPolicy) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *EventGatewayIDPrefixPolicy) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *EventGatewayIDPrefixPolicy) GetCondition() *string {
	if o == nil {
		return nil
	}
	return o.Condition
}

func (o *EventGatewayIDPrefixPolicy) GetConfig() *EventGatewayIDPrefixPolicyConfig {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *EventGatewayIDPrefixPolicy) GetLabels() map[string]*string {
	if o == nil {
		return nil
	}
	return o.Labels
}
