// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateAPIVersionRequestAPISpecType - The type of specification being stored. This allows us to render the specification correctly.
type CreateAPIVersionRequestAPISpecType string

const (
	CreateAPIVersionRequestAPISpecTypeOas2     CreateAPIVersionRequestAPISpecType = "oas2"
	CreateAPIVersionRequestAPISpecTypeOas3     CreateAPIVersionRequestAPISpecType = "oas3"
	CreateAPIVersionRequestAPISpecTypeAsyncapi CreateAPIVersionRequestAPISpecType = "asyncapi"
)

func (e CreateAPIVersionRequestAPISpecType) ToPointer() *CreateAPIVersionRequestAPISpecType {
	return &e
}
func (e *CreateAPIVersionRequestAPISpecType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oas2":
		fallthrough
	case "oas3":
		fallthrough
	case "asyncapi":
		*e = CreateAPIVersionRequestAPISpecType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAPIVersionRequestAPISpecType: %v", v)
	}
}

type CreateAPIVersionRequest struct {
	// The version of the api.
	Version *string `json:"version,omitempty"`
	// The raw content of your API spec, in json or yaml format (OpenAPI or AsyncAPI).
	//
	SpecContent *string                             `json:"spec_content,omitempty"`
	SpecType    *CreateAPIVersionRequestAPISpecType `json:"spec_type,omitempty"`
}

func (o *CreateAPIVersionRequest) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *CreateAPIVersionRequest) GetSpecContent() *string {
	if o == nil {
		return nil
	}
	return o.SpecContent
}

func (o *CreateAPIVersionRequest) GetSpecType() *CreateAPIVersionRequestAPISpecType {
	if o == nil {
		return nil
	}
	return o.SpecType
}
