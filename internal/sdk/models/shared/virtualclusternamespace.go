// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Mode - * hide_prefix - the configured prefix is hidden from clients for topics and IDs when reading.
//
//	Created resources are written with the prefix on the backend cluster.
//
// * enforce_prefix - the configured prefix remains visible to clients.
//
//	Created resources must include the prefix or the request will fail.
type Mode string

const (
	ModeHidePrefix    Mode = "hide_prefix"
	ModeEnforcePrefix Mode = "enforce_prefix"
)

func (e Mode) ToPointer() *Mode {
	return &e
}
func (e *Mode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hide_prefix":
		fallthrough
	case "enforce_prefix":
		*e = Mode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Mode: %v", v)
	}
}

// VirtualClusterNamespace - Namespace allows to implement multitenancy using a single backend cluster.
// It allows to either hide or enforce a static prefix on resources (topics, consumer group IDs, transaction IDs).
type VirtualClusterNamespace struct {
	// * hide_prefix - the configured prefix is hidden from clients for topics and IDs when reading.
	//
	//   Created resources are written with the prefix on the backend cluster.
	// * enforce_prefix - the configured prefix remains visible to clients.
	//
	//   Created resources must include the prefix or the request will fail.
	//
	Mode Mode `json:"mode"`
	// The namespace is differentiated by this chosen prefix.
	// For example, if the prefix is set to "analytics_" the topic named "analytics_user_clicks" is available to the clients
	// of the virtual cluster. Topics without the prefix will be ignored unless added via `additional.topics`.
	//
	Prefix     string                                       `json:"prefix"`
	Additional *VirtualClusterNamespaceAdditionalProperties `json:"additional,omitempty"`
}

func (o *VirtualClusterNamespace) GetMode() Mode {
	if o == nil {
		return Mode("")
	}
	return o.Mode
}

func (o *VirtualClusterNamespace) GetPrefix() string {
	if o == nil {
		return ""
	}
	return o.Prefix
}

func (o *VirtualClusterNamespace) GetAdditional() *VirtualClusterNamespaceAdditionalProperties {
	if o == nil {
		return nil
	}
	return o.Additional
}
