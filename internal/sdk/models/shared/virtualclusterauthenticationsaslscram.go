// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VirtualClusterAuthenticationSaslScramType string

const (
	VirtualClusterAuthenticationSaslScramTypeSaslScram VirtualClusterAuthenticationSaslScramType = "sasl_scram"
)

func (e VirtualClusterAuthenticationSaslScramType) ToPointer() *VirtualClusterAuthenticationSaslScramType {
	return &e
}
func (e *VirtualClusterAuthenticationSaslScramType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sasl_scram":
		*e = VirtualClusterAuthenticationSaslScramType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualClusterAuthenticationSaslScramType: %v", v)
	}
}

// VirtualClusterAuthenticationSaslScramAlgorithm - The algorithm used for SASL/SCRAM authentication.
type VirtualClusterAuthenticationSaslScramAlgorithm string

const (
	VirtualClusterAuthenticationSaslScramAlgorithmSha256 VirtualClusterAuthenticationSaslScramAlgorithm = "sha256"
	VirtualClusterAuthenticationSaslScramAlgorithmSha512 VirtualClusterAuthenticationSaslScramAlgorithm = "sha512"
)

func (e VirtualClusterAuthenticationSaslScramAlgorithm) ToPointer() *VirtualClusterAuthenticationSaslScramAlgorithm {
	return &e
}
func (e *VirtualClusterAuthenticationSaslScramAlgorithm) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sha256":
		fallthrough
	case "sha512":
		*e = VirtualClusterAuthenticationSaslScramAlgorithm(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualClusterAuthenticationSaslScramAlgorithm: %v", v)
	}
}

// VirtualClusterAuthenticationSaslScram - SASL/SCRAM authentication scheme for the virtual cluster.
type VirtualClusterAuthenticationSaslScram struct {
	Type VirtualClusterAuthenticationSaslScramType `json:"type"`
	// The algorithm used for SASL/SCRAM authentication.
	Algorithm VirtualClusterAuthenticationSaslScramAlgorithm `json:"algorithm"`
}

func (o *VirtualClusterAuthenticationSaslScram) GetType() VirtualClusterAuthenticationSaslScramType {
	if o == nil {
		return VirtualClusterAuthenticationSaslScramType("")
	}
	return o.Type
}

func (o *VirtualClusterAuthenticationSaslScram) GetAlgorithm() VirtualClusterAuthenticationSaslScramAlgorithm {
	if o == nil {
		return VirtualClusterAuthenticationSaslScramAlgorithm("")
	}
	return o.Algorithm
}
