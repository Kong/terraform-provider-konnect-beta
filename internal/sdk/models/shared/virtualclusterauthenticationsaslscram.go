// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

// VirtualClusterAuthenticationSaslScramAlgorithm - The algorithm used for SASL/SCRAM authentication.
type VirtualClusterAuthenticationSaslScramAlgorithm string

const (
	VirtualClusterAuthenticationSaslScramAlgorithmSha256 VirtualClusterAuthenticationSaslScramAlgorithm = "sha256"
	VirtualClusterAuthenticationSaslScramAlgorithmSha512 VirtualClusterAuthenticationSaslScramAlgorithm = "sha512"
)

func (e VirtualClusterAuthenticationSaslScramAlgorithm) ToPointer() *VirtualClusterAuthenticationSaslScramAlgorithm {
	return &e
}
func (e *VirtualClusterAuthenticationSaslScramAlgorithm) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sha256":
		fallthrough
	case "sha512":
		*e = VirtualClusterAuthenticationSaslScramAlgorithm(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualClusterAuthenticationSaslScramAlgorithm: %v", v)
	}
}

// VirtualClusterAuthenticationSaslScram - SASL/SCRAM authentication scheme for the virtual cluster.
type VirtualClusterAuthenticationSaslScram struct {
	type_ string `const:"sasl_scram" json:"type"`
	// The algorithm used for SASL/SCRAM authentication.
	Algorithm VirtualClusterAuthenticationSaslScramAlgorithm `json:"algorithm"`
}

func (v VirtualClusterAuthenticationSaslScram) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *VirtualClusterAuthenticationSaslScram) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"type", "algorithm"}); err != nil {
		return err
	}
	return nil
}

func (v *VirtualClusterAuthenticationSaslScram) GetType() string {
	return "sasl_scram"
}

func (v *VirtualClusterAuthenticationSaslScram) GetAlgorithm() VirtualClusterAuthenticationSaslScramAlgorithm {
	if v == nil {
		return VirtualClusterAuthenticationSaslScramAlgorithm("")
	}
	return v.Algorithm
}
