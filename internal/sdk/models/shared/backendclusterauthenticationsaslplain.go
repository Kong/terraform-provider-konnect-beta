// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BackendClusterAuthenticationSaslPlainType string

const (
	BackendClusterAuthenticationSaslPlainTypeSaslPlain BackendClusterAuthenticationSaslPlainType = "sasl_plain"
)

func (e BackendClusterAuthenticationSaslPlainType) ToPointer() *BackendClusterAuthenticationSaslPlainType {
	return &e
}
func (e *BackendClusterAuthenticationSaslPlainType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sasl_plain":
		*e = BackendClusterAuthenticationSaslPlainType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BackendClusterAuthenticationSaslPlainType: %v", v)
	}
}

// BackendClusterAuthenticationSaslPlain - SASL/PLAIN authentication scheme for the backend cluster.
type BackendClusterAuthenticationSaslPlain struct {
	Type BackendClusterAuthenticationSaslPlainType `json:"type"`
	// A template string expression containing a reference to a secret or a literal value
	Username string `json:"username"`
	// A template string expression containing a reference to a secret
	Password string `json:"password"`
}

func (o *BackendClusterAuthenticationSaslPlain) GetType() BackendClusterAuthenticationSaslPlainType {
	if o == nil {
		return BackendClusterAuthenticationSaslPlainType("")
	}
	return o.Type
}

func (o *BackendClusterAuthenticationSaslPlain) GetUsername() string {
	if o == nil {
		return ""
	}
	return o.Username
}

func (o *BackendClusterAuthenticationSaslPlain) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}
