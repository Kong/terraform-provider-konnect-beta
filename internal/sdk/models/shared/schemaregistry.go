// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
	"time"
)

// SchemaRegistryConfig - The configuration of the schema registry.
type SchemaRegistryConfig struct {
}

// SchemaRegistry - A schema registry that contains schemas.
type SchemaRegistry struct {
	// The unique name of the schema registry.
	Name string `json:"name"`
	// A human-readable description of the virtual cluster.
	Description *string `default:"null" json:"description"`
	// The type of the schema registry.
	Type string `json:"type"`
	// The configuration of the schema registry.
	Config *SchemaRegistryConfig `json:"config,omitempty"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
	// The unique identifier of the schema registry.
	ID string `json:"id"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (s SchemaRegistry) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SchemaRegistry) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SchemaRegistry) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *SchemaRegistry) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *SchemaRegistry) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *SchemaRegistry) GetConfig() *SchemaRegistryConfig {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *SchemaRegistry) GetLabels() map[string]*string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *SchemaRegistry) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *SchemaRegistry) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *SchemaRegistry) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
