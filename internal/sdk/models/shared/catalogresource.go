// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
	"time"
)

// CatalogResource - Information about a catalog resource.
type CatalogResource struct {
	// The resource ID.
	ID string `json:"id"`
	// The name of the resource.
	// Will be `null` when the resource has not yet been hydrated by the integration.
	//
	Name *string `json:"name"`
	// Short-hand descriptor of an integration installed within the catalog.
	Integration IntegrationRef `json:"integration"`
	// The resource type. Available resource types are compiled from the integrations installed within the catalog.
	//
	Type string `json:"type"`
	// JSON object representing the properties used to identify the resource in the third-party system.
	// The schema depends on the resource type and is dynamically registered at runtime.
	//
	Config any `json:"config"`
	// JSON object containing schemaless attributes of the resource.
	// This field is always populated by the system backing the integration.
	// When `null`, the resource has been manually initialized via API but has
	// yet to be hydrated by the integration.
	//
	Attributes map[string]any `json:"attributes"`
	// Whether or not the resource has been archived.
	Archived bool `json:"archived"`
	// The number of catalog services this resource is mapped to.
	ServiceAssociations float64 `json:"service_associations"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (c CatalogResource) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CatalogResource) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CatalogResource) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CatalogResource) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CatalogResource) GetIntegration() IntegrationRef {
	if o == nil {
		return IntegrationRef{}
	}
	return o.Integration
}

func (o *CatalogResource) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *CatalogResource) GetConfig() any {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *CatalogResource) GetAttributes() map[string]any {
	if o == nil {
		return nil
	}
	return o.Attributes
}

func (o *CatalogResource) GetArchived() bool {
	if o == nil {
		return false
	}
	return o.Archived
}

func (o *CatalogResource) GetServiceAssociations() float64 {
	if o == nil {
		return 0.0
	}
	return o.ServiceAssociations
}

func (o *CatalogResource) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *CatalogResource) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
