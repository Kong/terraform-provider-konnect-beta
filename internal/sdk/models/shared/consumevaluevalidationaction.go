// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConsumeValueValidationAction - Defines a behavior when record value is not valid.
//   - mark - marks a record with kong/server header and client ID value
//     to help to identify the clients violating schema.
//   - skip - skips delivering a record.
type ConsumeValueValidationAction string

const (
	ConsumeValueValidationActionMark ConsumeValueValidationAction = "mark"
	ConsumeValueValidationActionSkip ConsumeValueValidationAction = "skip"
)

func (e ConsumeValueValidationAction) ToPointer() *ConsumeValueValidationAction {
	return &e
}
func (e *ConsumeValueValidationAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mark":
		fallthrough
	case "skip":
		*e = ConsumeValueValidationAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsumeValueValidationAction: %v", v)
	}
}
