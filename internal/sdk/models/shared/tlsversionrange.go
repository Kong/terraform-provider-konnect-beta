// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

// Min - Minimum TLS version to use.
type Min string

const (
	MinTlSv12 Min = "TLSv1.2"
	MinTlSv13 Min = "TLSv1.3"
)

func (e Min) ToPointer() *Min {
	return &e
}
func (e *Min) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TLSv1.2":
		fallthrough
	case "TLSv1.3":
		*e = Min(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Min: %v", v)
	}
}

// Max - Maximum TLS version to use.
type Max string

const (
	MaxTlSv12 Max = "TLSv1.2"
	MaxTlSv13 Max = "TLSv1.3"
)

func (e Max) ToPointer() *Max {
	return &e
}
func (e *Max) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TLSv1.2":
		fallthrough
	case "TLSv1.3":
		*e = Max(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Max: %v", v)
	}
}

// TLSVersionRange - A range of TLS versions.
type TLSVersionRange struct {
	// Minimum TLS version to use.
	Min *Min `default:"TLSv1.2" json:"min"`
	// Maximum TLS version to use.
	Max *Max `default:"TLSv1.3" json:"max"`
}

func (t TLSVersionRange) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TLSVersionRange) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (t *TLSVersionRange) GetMin() *Min {
	if t == nil {
		return nil
	}
	return t.Min
}

func (t *TLSVersionRange) GetMax() *Max {
	if t == nil {
		return nil
	}
	return t.Max
}
