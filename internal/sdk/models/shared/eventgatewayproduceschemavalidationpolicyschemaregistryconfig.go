// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigType string

const (
	EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigTypeConfluentSchemaRegistry EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigType = "confluent_schema_registry"
)

func (e EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigType) ToPointer() *EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigType {
	return &e
}
func (e *EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confluent_schema_registry":
		*e = EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigType: %v", v)
	}
}

// EventGatewayProduceSchemaValidationPolicySchemaRegistryConfig - The configuration of the produce schema validation policy when using a schema registry.
type EventGatewayProduceSchemaValidationPolicySchemaRegistryConfig struct {
	// A reference to a schema Registry.
	SchemaRegistry *SchemaRegistryReference `json:"schema_registry,omitempty"`
	// Defines a behavior when record key is not valid.
	// * reject - rejects a batch for topic partition. Only available for produce.
	// * mark - marks a record with kong/server header and client ID value
	//
	//   to help to identify the clients violating schema.
	//
	KeyValidationAction ProduceKeyValidationAction `json:"key_validation_action"`
	// Defines a behavior when record value is not valid.
	// * reject - rejects a batch for topic partition. Only available for produce.
	// * mark - marks a record with kong/server header and client ID value
	//
	//   to help to identify the clients violating schema.
	//
	ValueValidationAction ProduceValueValidationAction                                      `json:"value_validation_action"`
	Type                  EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigType `json:"type"`
}

func (o *EventGatewayProduceSchemaValidationPolicySchemaRegistryConfig) GetSchemaRegistry() *SchemaRegistryReference {
	if o == nil {
		return nil
	}
	return o.SchemaRegistry
}

func (o *EventGatewayProduceSchemaValidationPolicySchemaRegistryConfig) GetKeyValidationAction() ProduceKeyValidationAction {
	if o == nil {
		return ProduceKeyValidationAction("")
	}
	return o.KeyValidationAction
}

func (o *EventGatewayProduceSchemaValidationPolicySchemaRegistryConfig) GetValueValidationAction() ProduceValueValidationAction {
	if o == nil {
		return ProduceValueValidationAction("")
	}
	return o.ValueValidationAction
}

func (o *EventGatewayProduceSchemaValidationPolicySchemaRegistryConfig) GetType() EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigType {
	if o == nil {
		return EventGatewayProduceSchemaValidationPolicySchemaRegistryConfigType("")
	}
	return o.Type
}
