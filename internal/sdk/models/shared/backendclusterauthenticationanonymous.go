// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BackendClusterAuthenticationAnonymousType - The type of authentication scheme.
type BackendClusterAuthenticationAnonymousType string

const (
	BackendClusterAuthenticationAnonymousTypeAnonymous BackendClusterAuthenticationAnonymousType = "anonymous"
)

func (e BackendClusterAuthenticationAnonymousType) ToPointer() *BackendClusterAuthenticationAnonymousType {
	return &e
}
func (e *BackendClusterAuthenticationAnonymousType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "anonymous":
		*e = BackendClusterAuthenticationAnonymousType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BackendClusterAuthenticationAnonymousType: %v", v)
	}
}

// BackendClusterAuthenticationAnonymous - Anonymous authentication scheme for the backend cluster.
type BackendClusterAuthenticationAnonymous struct {
	// The type of authentication scheme.
	Type BackendClusterAuthenticationAnonymousType `json:"type"`
}

func (o *BackendClusterAuthenticationAnonymous) GetType() BackendClusterAuthenticationAnonymousType {
	if o == nil {
		return BackendClusterAuthenticationAnonymousType("")
	}
	return o.Type
}
