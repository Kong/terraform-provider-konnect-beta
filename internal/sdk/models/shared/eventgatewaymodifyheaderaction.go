// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

type EventGatewayModifyHeaderActionType string

const (
	EventGatewayModifyHeaderActionTypeRemove EventGatewayModifyHeaderActionType = "remove"
	EventGatewayModifyHeaderActionTypeSet    EventGatewayModifyHeaderActionType = "set"
)

// EventGatewayModifyHeaderAction - An action that modifies a header.
type EventGatewayModifyHeaderAction struct {
	EventGatewayModifyHeaderRemoveAction *EventGatewayModifyHeaderRemoveAction `queryParam:"inline"`
	EventGatewayModifyHeaderSetAction    *EventGatewayModifyHeaderSetAction    `queryParam:"inline"`

	Type EventGatewayModifyHeaderActionType
}

func CreateEventGatewayModifyHeaderActionRemove(remove EventGatewayModifyHeaderRemoveAction) EventGatewayModifyHeaderAction {
	typ := EventGatewayModifyHeaderActionTypeRemove

	typStr := Op(typ)
	remove.Op = typStr

	return EventGatewayModifyHeaderAction{
		EventGatewayModifyHeaderRemoveAction: &remove,
		Type:                                 typ,
	}
}

func CreateEventGatewayModifyHeaderActionSet(set EventGatewayModifyHeaderSetAction) EventGatewayModifyHeaderAction {
	typ := EventGatewayModifyHeaderActionTypeSet

	typStr := EventGatewayModifyHeaderSetActionOp(typ)
	set.Op = typStr

	return EventGatewayModifyHeaderAction{
		EventGatewayModifyHeaderSetAction: &set,
		Type:                              typ,
	}
}

func (u *EventGatewayModifyHeaderAction) UnmarshalJSON(data []byte) error {

	type discriminator struct {
		Op string `json:"op"`
	}

	dis := new(discriminator)
	if err := json.Unmarshal(data, &dis); err != nil {
		return fmt.Errorf("could not unmarshal discriminator: %w", err)
	}

	switch dis.Op {
	case "remove":
		eventGatewayModifyHeaderRemoveAction := new(EventGatewayModifyHeaderRemoveAction)
		if err := utils.UnmarshalJSON(data, &eventGatewayModifyHeaderRemoveAction, "", true, false); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Op == remove) type EventGatewayModifyHeaderRemoveAction within EventGatewayModifyHeaderAction: %w", string(data), err)
		}

		u.EventGatewayModifyHeaderRemoveAction = eventGatewayModifyHeaderRemoveAction
		u.Type = EventGatewayModifyHeaderActionTypeRemove
		return nil
	case "set":
		eventGatewayModifyHeaderSetAction := new(EventGatewayModifyHeaderSetAction)
		if err := utils.UnmarshalJSON(data, &eventGatewayModifyHeaderSetAction, "", true, false); err != nil {
			return fmt.Errorf("could not unmarshal `%s` into expected (Op == set) type EventGatewayModifyHeaderSetAction within EventGatewayModifyHeaderAction: %w", string(data), err)
		}

		u.EventGatewayModifyHeaderSetAction = eventGatewayModifyHeaderSetAction
		u.Type = EventGatewayModifyHeaderActionTypeSet
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for EventGatewayModifyHeaderAction", string(data))
}

func (u EventGatewayModifyHeaderAction) MarshalJSON() ([]byte, error) {
	if u.EventGatewayModifyHeaderRemoveAction != nil {
		return utils.MarshalJSON(u.EventGatewayModifyHeaderRemoveAction, "", true)
	}

	if u.EventGatewayModifyHeaderSetAction != nil {
		return utils.MarshalJSON(u.EventGatewayModifyHeaderSetAction, "", true)
	}

	return nil, errors.New("could not marshal union type EventGatewayModifyHeaderAction: all fields are null")
}
