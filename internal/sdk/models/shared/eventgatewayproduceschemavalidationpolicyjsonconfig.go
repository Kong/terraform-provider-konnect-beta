// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventGatewayProduceSchemaValidationPolicyJSONConfigType string

const (
	EventGatewayProduceSchemaValidationPolicyJSONConfigTypeJSON EventGatewayProduceSchemaValidationPolicyJSONConfigType = "json"
)

func (e EventGatewayProduceSchemaValidationPolicyJSONConfigType) ToPointer() *EventGatewayProduceSchemaValidationPolicyJSONConfigType {
	return &e
}
func (e *EventGatewayProduceSchemaValidationPolicyJSONConfigType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		*e = EventGatewayProduceSchemaValidationPolicyJSONConfigType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventGatewayProduceSchemaValidationPolicyJSONConfigType: %v", v)
	}
}

// EventGatewayProduceSchemaValidationPolicyJSONConfig - The configuration of the produce schema validation policy when using JSON parsing without schema.
type EventGatewayProduceSchemaValidationPolicyJSONConfig struct {
	// A reference to a schema Registry.
	SchemaRegistry *SchemaRegistryReference `json:"schema_registry,omitempty"`
	// Defines a behavior when record key is not valid.
	// * reject - rejects a batch for topic partition. Only available for produce.
	// * mark - marks a record with kong/server header and client ID value
	//
	//   to help to identify the clients violating schema.
	//
	KeyValidationAction ProduceKeyValidationAction `json:"key_validation_action"`
	// Defines a behavior when record value is not valid.
	// * reject - rejects a batch for topic partition. Only available for produce.
	// * mark - marks a record with kong/server header and client ID value
	//
	//   to help to identify the clients violating schema.
	//
	ValueValidationAction ProduceValueValidationAction                            `json:"value_validation_action"`
	Type                  EventGatewayProduceSchemaValidationPolicyJSONConfigType `json:"type"`
}

func (o *EventGatewayProduceSchemaValidationPolicyJSONConfig) GetSchemaRegistry() *SchemaRegistryReference {
	if o == nil {
		return nil
	}
	return o.SchemaRegistry
}

func (o *EventGatewayProduceSchemaValidationPolicyJSONConfig) GetKeyValidationAction() ProduceKeyValidationAction {
	if o == nil {
		return ProduceKeyValidationAction("")
	}
	return o.KeyValidationAction
}

func (o *EventGatewayProduceSchemaValidationPolicyJSONConfig) GetValueValidationAction() ProduceValueValidationAction {
	if o == nil {
		return ProduceValueValidationAction("")
	}
	return o.ValueValidationAction
}

func (o *EventGatewayProduceSchemaValidationPolicyJSONConfig) GetType() EventGatewayProduceSchemaValidationPolicyJSONConfigType {
	if o == nil {
		return EventGatewayProduceSchemaValidationPolicyJSONConfigType("")
	}
	return o.Type
}
