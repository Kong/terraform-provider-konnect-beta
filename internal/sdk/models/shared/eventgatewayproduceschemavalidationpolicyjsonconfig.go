// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect-beta/internal/sdk/internal/utils"
)

// EventGatewayProduceSchemaValidationPolicyJSONConfig - The configuration of the produce schema validation policy when using JSON parsing without schema.
type EventGatewayProduceSchemaValidationPolicyJSONConfig struct {
	// A reference to a schema Registry.
	SchemaRegistry *SchemaRegistryReference `json:"schema_registry,omitempty"`
	// Defines a behavior when record key is not valid.
	// * reject - rejects a batch for topic partition. Only available for produce.
	// * mark - marks a record with kong/server header and client ID value
	//
	//   to help to identify the clients violating schema.
	//
	KeyValidationAction ProduceKeyValidationAction `json:"key_validation_action"`
	// Defines a behavior when record value is not valid.
	// * reject - rejects a batch for topic partition. Only available for produce.
	// * mark - marks a record with kong/server header and client ID value
	//
	//   to help to identify the clients violating schema.
	//
	ValueValidationAction ProduceValueValidationAction `json:"value_validation_action"`
	type_                 string                       `const:"json" json:"type"`
}

func (e EventGatewayProduceSchemaValidationPolicyJSONConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EventGatewayProduceSchemaValidationPolicyJSONConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EventGatewayProduceSchemaValidationPolicyJSONConfig) GetSchemaRegistry() *SchemaRegistryReference {
	if o == nil {
		return nil
	}
	return o.SchemaRegistry
}

func (o *EventGatewayProduceSchemaValidationPolicyJSONConfig) GetKeyValidationAction() ProduceKeyValidationAction {
	if o == nil {
		return ProduceKeyValidationAction("")
	}
	return o.KeyValidationAction
}

func (o *EventGatewayProduceSchemaValidationPolicyJSONConfig) GetValueValidationAction() ProduceValueValidationAction {
	if o == nil {
		return ProduceValueValidationAction("")
	}
	return o.ValueValidationAction
}

func (o *EventGatewayProduceSchemaValidationPolicyJSONConfig) GetType() string {
	return "json"
}
