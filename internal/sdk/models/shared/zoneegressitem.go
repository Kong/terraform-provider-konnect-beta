// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// Admin contains configuration related to Envoy Admin API
type Admin struct {
	// Port on which Envoy Admin API server will be listening
	Port *int64 `json:"port,omitempty"`
}

func (a *Admin) GetPort() *int64 {
	if a == nil {
		return nil
	}
	return a.Port
}

// ZoneEgressItemNetworking - Networking defines the address and port of the Egress to listen on.
type ZoneEgressItemNetworking struct {
	// Address on which inbound listener will be exposed
	Address *string `json:"address,omitempty"`
	// Admin contains configuration related to Envoy Admin API
	Admin *Admin `json:"admin,omitempty"`
	// Port of the inbound interface that will forward requests to the service.
	Port *int64 `json:"port,omitempty"`
}

func (z *ZoneEgressItemNetworking) GetAddress() *string {
	if z == nil {
		return nil
	}
	return z.Address
}

func (z *ZoneEgressItemNetworking) GetAdmin() *Admin {
	if z == nil {
		return nil
	}
	return z.Admin
}

func (z *ZoneEgressItemNetworking) GetPort() *int64 {
	if z == nil {
		return nil
	}
	return z.Port
}

// ZoneEgressItem - Successful response
type ZoneEgressItem struct {
	Labels map[string]string `json:"labels,omitempty"`
	Name   string            `json:"name"`
	// Networking defines the address and port of the Egress to listen on.
	Networking *ZoneEgressItemNetworking `json:"networking,omitempty"`
	Type       string                    `json:"type"`
	// Zone field contains Zone name where egress is serving, field will be
	// automatically set by Global Kuma CP
	Zone *string `json:"zone,omitempty"`
}

func (z *ZoneEgressItem) GetLabels() map[string]string {
	if z == nil {
		return nil
	}
	return z.Labels
}

func (z *ZoneEgressItem) GetName() string {
	if z == nil {
		return ""
	}
	return z.Name
}

func (z *ZoneEgressItem) GetNetworking() *ZoneEgressItemNetworking {
	if z == nil {
		return nil
	}
	return z.Networking
}

func (z *ZoneEgressItem) GetType() string {
	if z == nil {
		return ""
	}
	return z.Type
}

func (z *ZoneEgressItem) GetZone() *string {
	if z == nil {
		return nil
	}
	return z.Zone
}
